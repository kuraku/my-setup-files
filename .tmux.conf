# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# read conifg
bind r source-file ~/.tmux.conf \; display-message "Reload Config."

# Set the prefix to ^A.
unbind C-b
set -g prefix ^T
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
#unbind ^@
#bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"
unbind T
bind T command-prompt "rename-window %%"

# other ^A
#unbind ^A
#bind ^A last-window

# prev ^H ^P p ^? 
#unbind ^H
#bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \ 
unbind '\'
bind '\' confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-pane"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split
unbind |
bind | split-window -h

#unbind -
#bind - split-window -v

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
#unbind '"'
#bind '"' choose-window

# resize
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1
bind -r - resize-pane -D 1
bind -r + resize-pane -U 1

# default statusbar colors
set -g status-fg white
set -g status-bg cyan
#set -g status-attr default

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg red
#set-window-option -g window-status-current-attr bright

# pane-active-border
set -g pane-active-border-fg blue
set -g pane-active-border-bg blue

# status bar
set -g status-left-length 40
set -g status-left "#[fg=black][#S]"
# 
set -g status-right "#[fg=black]%Y-%m-%d(%a) %H:%M"
#set -g status-right "#[fg=black]#(w | head -1 | cut -d, -f4) / %Y-%m-%d(%a) %H:%M"

#
set-option -g history-limit 2048

# 
set -g base-index 1
setw -g pane-base-index 1

# 20170718 文字化け
setw -g utf8 off

# esc key
set -s escape-time 0

## prompt
unbind P
bind P send-keys 'PS1="\n\[\e[32;1m\](\[\e[37;1m\]\u@\h\[\e[32;1m\])-(\[\e[37;1m\]jobs:\j\[\e[32;1m\])-(\[\e[37;1m\]\w\[\e[32;1m\])\n(\[\e[37;1m\]! \!\[\e[32;1m\])-> \[\e[0m\]"' c-m

## alias
unbind A
#bind A send-keys 'alias ls="ls -aF --color=auto"' c-m 'alias pu=pushd' c-m 'alias po=popd' c-m 'alias d="dirs -v"' c-m 'alias h=history' c-m 'alias grep="grep --color=auto"' c-m 'alias egrep="egrep --color=auto"' c-m 'alias dstat-="dstat -tplndcm"' c-m
bind A send-keys 'alias ls="ls -aF --color=auto"' c-m 'alias pu=pushd' c-m 'alias po=popd' c-m 'alias d="dirs -v"' c-m 'alias h=history' c-m 'alias grep="grep --color=auto"' c-m 'alias egrep="egrep --color=auto"' c-m 'alias dstat-="dstat -tplndcm"' c-m '(ls ~/masuda/peco >/dev/null 2>&1) && (alias peco="~/masuda/peco";echo -e "\e[33m peco exist. \e[m")' c-m '(ls ~/masuda/bin/peco >/dev/null 2>&1) && (alias peco="~/masuda/bin/peco";echo -e "\e[33m peco exist. \e[m")' c-m '(ls ~/bin/peco >/dev/null 2>&1) && (alias peco="~/bin/peco";echo -e "\e[33m peco exist. \e[m")' c-m

unbind G
bind G send-keys 'wget -O peco.tar.gz --no-check-certificate https://github.com/peco/peco/releases/download/v0.3.5/peco_linux_386.tar.gz'

# UTF-8 <-> EUC
unbind U
bind U send-keys 'export LANG=ja_JP.utf8' c-m
unbind E
bind E send-keys 'export LANG=ja_JP.eucJP' c-m

# even vertial / horizontal
unbind V
bind V select-layout even-vertical
unbind H
bind H select-layout even-horizontal

#renumber
set-option -g renumber-windows on

##
bind b split-window "tmux lsw | peco --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | xargs tmux select-window -t"

bind-key C-t split-window -c '#{pane_current_path}' "tmux list-windows -F '#{window_index}: #{window_name}#{window_flags} (#{window_panes} panes) #{pane_current_path} #{?window_active, (active),}' | peco --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | xargs tmux select-window -t"

## paste C-t C-y
bind ^y choose-buffer

## help
unbind h
bind h send-keys 'echo "ズーム機能 ^Tz / 横分割 ^T ″/ 縦分割 ^T % / ペインの入れ替え ^T{ / ^T} / ペイン表示/移動 ^T q <num>"' c-m 'echo "タイトル変更 ^TT / ウィンドウを8番へ移動 move-window -t 8 / ウィンドウの入れ替え(1と) swap-window -t 1"' c-m 'echo "縦割り ^T H / 横割り ^T V / ペインレイアウト変更 ^T alt-1?5 / キーバインド :list-keys"' c-m

