;; -*- emacs-lisp -*-
;; @ anything.el
;; Time-stamp: <2013-09-18 11:07 akira.masuda>

;; 3rd ver

(require 'anything-startup)
(require 'recentf)

;;(require 'anything-etags)
;;(require 'anything-grep)
;;(require 'anything-ipa)
(recentf-mode 1)
(global-set-key "\C-x\C-a" 'anything)
(global-set-key [?\C-/] 'anything)
;;(global-set-key [?\C-/] 'my-anything)
;;(global-set-key [f12] 'anything)
(define-key anything-map "\en" 'anything-next-source)
(define-key anything-map "\ep" 'anything-previous-source)

;; 10.10.12(tue)-18:44
(require 'recentf-ext)

(setq anything-sources
      (list
       anything-c-source-buffers+
       anything-c-source-recentf
       anything-c-source-file-name-history
	   anything-c-source-emacs-commands
       anything-c-source-occur
	   anything-c-source-buffer-not-found
       anything-c-source-kill-ring))

;;Setting `anything-sources' directly is not good because
;;`anything' is not for one command.  For now, interactive use of
;;`anything' (M-x anything) is only for demonstration purpose.
;;So you should define commands calling `anything'.
;;I help you to migrate to the new way.
;;
;;The code below is automatically generated from current
;;`anything-sources' value. You can use the `my-anything' command
;;now!
;;
;;Copy and paste it to your .emacs. Then substitute `my-anything'
;;for `anything' bindings in all `define-key', `local-set-key' and
;;`global-set-key' calls.

;;(defun my-anything ()
;;  "Anything command for you.
;;
;;It is automatically generated by `anything-migrate-sources'."
;;  (Interactive)
;;  (anything-other-buffer
;;    '(anything-c-source-buffers-list anything-c-source-recentf anything-c-source-files-in-current-dir+)
;;    "*my-anything*"))

;;;;
;;(defun anything-c-bm-global-init ()
;;  "Init function for `anything-c-source-bm-global'."
;;  (when (require 'bm nil t)
;;    (with-no-warnings
;;      (let ((files bm-repository)
;;            (buf (anything-candidate-buffer 'global)))
;;        (dolist (file files)            ;ブックマークされてるファイルリストから，1つ取り出す
;;          (dolist (bookmark (cdr (assoc 'bookmarks (cdr file)))) ;1つのファイルに対して複数のブックマークがあるので
;;            (let ((position (cdr (assoc 'position bookmark))) ;position
;;                  (annotation (cdr (assoc 'annotation bookmark))) ;annotation
;;                  (file (car file))                               ;file名を取り出す
;;                  line
;;                  str)
;;              (setq str (with-current-buffer (find-file-noselect file) ;anything用の文字列にformat
;;                               (goto-char position)
;;                               (beginning-of-line)
;;                               (unless annotation
;;                                   (setq annotation ""))
;;                               (if (string= "" line)
;;                                   (setq line  "<EMPTY LINE>")
;;                                 (setq line (car (split-string (thing-at-point 'line) "[\n\r]"))))
;;                               (format "%s:%d: [%s]: %s\n" file (line-number-at-pos) annotation line)))
;;              (with-current-buffer buf (insert str)))))))))

;; Color
;;(eval-after-load "anything"
;;  '(progn
;;	 (set-face-bold-p 'anything-header t)
;;	 (set-face-foreground 'anything-header "white")
;;	 (set-face-background 'anything-header "DarkSeaGreen4")
;;	 (set-face-foreground 'anything-isearch-match "white")
;;	 (set-face-background 'anything-isearch-match "IndianRed")

;;	 (set-face-bold-p 'anything-dir-heading nil)
;;	 (set-face-foreground 'anything-dir-heading "DodgerBlue")
;;	 (set-face-background 'anything-dir-heading nil)

;;	 (set-face-bold-p 'anything-dir-priv nil)
;;	 (set-face-foreground 'anything-dir-priv "DodgerBlue")
;;	 (set-face-background 'anything-dir-priv nil) ))

;; 10.10.21(thu)-10:49
(when (locate-library "descbinds-anything")
  (require 'descbinds-anything)
  (descbinds-anything-install))

;; 10.11.05(fri)-14:14
(when (locate-library "anything-c-moccur")
  (require 'anything-c-moccur)
  (global-set-key (kbd "M-o") 'anything-c-moccur-occur-by-moccur)
  (global-set-key (kbd "C-M-o") 'anything-c-moccur-dmoccur)
  (global-set-key (kbd "C-x C-/") 'anything-call-source))

;; 11.03.01(tue)-10:30
;;(require 'anything-esh)

;; END anythin setup
